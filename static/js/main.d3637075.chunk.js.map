{"version":3,"sources":["components/FooterComponent.jsx","components/HeaderComponent.jsx","model/Musica.js","model/Album.js","model/Artista.js","services/MusicaService.js","components/MusicaFilterComponent.jsx","components/MusicaCadComponent.jsx","App.js","index.js"],"names":["FooterComponent","className","Component","HeaderComponent","Musica","id","nome","album","artista","this","Album","titulo","anoLancamento","Artista","genero","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","document","getElementById","innerHTML","responseText","open","send","classe","musica","musica2","artista2","album2","album1","album3","album4","album5","MusicaFilterComponent","props","state","musicas","addMusica","bind","editMusica","setState","MusicaService","retriveMusicas","history","push","onClick","map","indexOf","MusicaCadComponent","salvarMusica","e","preventDefault","nomeMusica","console","log","createMusica","handleChangeMusica","event","target","value","handleChangeCmbArtista","albumObject","retrieveAlbumsByArtista","JSON","parse","albuns","handleChangeCmbAlbum","match","params","artistas","undefined","artistasObjects","albunsObjects","retrieveById","placeholder","name","onChange","stringify","cancel","style","marginLeft","App","basename","process","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d3637075.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass FooterComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer className=\"footer\">\r\n                    <span className=\"text-muted\">Não tenho ideia do que colocar aqui!</span>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterComponent;","import React, { Component } from 'react';\r\n\r\nclass HeaderComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                        <div><h1 className=\"navbar-brand\">Crud em React JS</h1></div>\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;\r\n\r\n\r\n","class Musica {\r\n    constructor(id, nome, album, artista) {\r\n        this.id = id;\r\n        this.nome = nome;\r\n        this.album = album;\r\n        this.artista = artista;\r\n    }\r\n}\r\n\r\nexport default Musica;","class Album {\r\n    constructor(id, titulo, anoLancamento) {\r\n        this.id = id;\r\n        this.titulo = titulo;\r\n        this.anoLancamento = anoLancamento;\r\n    }\r\n}\r\n\r\nexport default Album;","class Artista {\r\n    constructor(id, nome, genero) {\r\n        this.id = id;\r\n        this.nome = nome;\r\n        this.genero = genero;\r\n    }\r\n}\r\n\r\nexport default Artista;","import Musica from \"../model/Musica\";\r\nimport Album from \"../model/Album\";\r\nimport Artista from \"../model/Artista\";\r\n\r\n\r\nconst URL_BASE_TESTE = \"https://jsonplaceholder.typicode.com/todos/1\";\r\nconst URL_BASE = \"http://localhost:8082\";\r\n\r\nclass MusicaService {\r\n\r\n    testeAjax() {\r\n        let xhttp = new XMLHttpRequest();\r\n        xhttp.onreadystatechange = function () {\r\n            if (this.readyState === 4 && this.status === 200) {\r\n                document.getElementById(\"demo\").innerHTML = this.responseText;\r\n            }\r\n        };\r\n        xhttp.open(\"GET\", URL_BASE_TESTE, true);\r\n        xhttp.send();\r\n    }\r\n\r\n    retrieveById(id, classe) {\r\n        let artista = new Artista(1, 'Red Hot Chili Peppers', 'Funky-Rock-Punky-Indie');\r\n        let album = new Album(1, 'Stadium Arcadium', 2006);\r\n        let musica = new Musica(1, 'Dani California', album, artista);\r\n\r\n        let artista2 = new Artista(2, 'Blink-182', 'Punk-Rock-Pop-Indie');\r\n        let album2 = new Album(4, 'Enema of State', 1999);\r\n        let musica2 = new Musica(4, 'All The Small things', album, artista);\r\n        return id === '1' ? musica : musica2;\r\n    }\r\n\r\n    retriveMusicas() {\r\n        let artista = new Artista(1, 'Red Hot Chili Peppers', 'Funky-Rock-Punky-Indie');\r\n        let album = new Album(1, 'Stadium Arcadium', 2006);\r\n        let musica = new Musica(1, 'Dani California', album, artista);\r\n\r\n        let artista2 = new Artista(2, 'Blink-182', 'Punk-Rock-Pop-Indie');\r\n        let album2 = new Album(4, 'Enema of State', 1999);\r\n        let musica2 = new Musica(4, 'All The Small things', album2, artista2);\r\n\r\n        return [musica, musica2];\r\n    }\r\n\r\n    createMusica(musica) {\r\n        // Tentar fazer com ajax caso não de certo\r\n        // Usar axios\r\n        // return axios.post(URL, musica);\r\n    }\r\n\r\n    retrieveAlbumsByArtista(artista) {\r\n        let album1 = new Album(1, 'Blood Sugar Sex Magik', 1991);\r\n        let album2 = new Album(2, 'Californication', 1999);\r\n        let album3 = new Album(3, 'Stadium Arcadium', 2006);\r\n        let album4 = new Album(4, 'Enema of State', 1999);\r\n        let album5 = new Album(5, 'California', 2016);\r\n        if (artista.id === 1) {\r\n            return [album1, album2, album3];\r\n        }\r\n        if (artista.id === 2) {\r\n            return [album4, album5];\r\n        }\r\n        return 'Sem albuns cadastrados';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new MusicaService();","import React, { Component } from 'react';\r\nimport MusicaService from '../services/MusicaService';\r\n\r\nclass MusicaFilterComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            musicas: []\r\n        }\r\n        this.addMusica = this.addMusica.bind(this);\r\n        this.editMusica = this.editMusica.bind(this);\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     ListaMusicasService.getMusicas().then((res)=>{\r\n    //         this.setState({\r\n    //             musicas: res.data\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            musicas: MusicaService.retriveMusicas()\r\n        });\r\n    }\r\n\r\n    addMusica() {\r\n        this.props.history.push('/musicas/create');\r\n    }\r\n\r\n    editMusica(id) {\r\n        this.props.history.push(`/musicas/edit/${id}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Lista de Músicas</h2>\r\n\r\n                <div className=\"text-right\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addMusica}>Adicionar Música</button>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Música</th>\r\n                                <th>Album</th>\r\n                                <th>Artista</th>\r\n                                <th>Ações</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.musicas.map(\r\n                                    musica =>\r\n                                        <tr key={musica.id}>\r\n                                            <td>{this.state.musicas.indexOf(musica) + 1}</td>\r\n                                            <td>{musica.nome}</td>\r\n                                            <td>{musica.album.titulo}</td>\r\n                                            <td>{musica.artista.nome}</td>\r\n                                            <td>\r\n                                                <button onClick={() => this.editMusica(musica.id)}\r\n                                                    className=\"btn btn-info\">Editar</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MusicaFilterComponent;","import React, { Component } from 'react';\r\nimport MusicaService from '../services/MusicaService';\r\n\r\nclass MusicaCadComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            nomeMusica: '',\r\n            artista: '',\r\n            album: '',\r\n            artistas: [], // Possivelmente será passado através dos props\r\n            albuns: [],\r\n        }\r\n        this.handleChangeMusica = this.handleChangeMusica.bind(this);\r\n        this.handleChangeCmbArtista = this.handleChangeCmbArtista.bind(this);\r\n        this.handleChangeCmbAlbum = this.handleChangeCmbAlbum.bind(this);\r\n        this.salvarMusica = this.salvarMusica.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.state.id === undefined) {\r\n            let artistasObjects = [{\r\n                id: 1,\r\n                nome: 'Red Hot Chili Peppers',\r\n                genero: 'Funky-Rock-Punky-Indie'\r\n            },\r\n            {\r\n                id: 2,\r\n                nome: 'Blink-182',\r\n                genero: 'Punk-Rock-Pop'\r\n            }];\r\n            let albunsObjects = MusicaService.retrieveAlbumsByArtista(artistasObjects[0]);\r\n            this.setState(\r\n                {\r\n                    artistas: artistasObjects,\r\n                    artista: artistasObjects[0],\r\n                    albuns: albunsObjects,\r\n                    album: albunsObjects[0]\r\n                });\r\n        } else {\r\n            let musica = MusicaService.retrieveById(this.state.id, 'Musica');\r\n            let artistasObjects = [{\r\n                id: 1,\r\n                nome: 'Red Hot Chili Peppers',\r\n                genero: 'Funky-Rock-Punky-Indie'\r\n            },\r\n            {\r\n                id: 2,\r\n                nome: 'Blink-182',\r\n                genero: 'Punk-Rock-Pop'\r\n            }];\r\n            let albunsObjects = MusicaService.retrieveAlbumsByArtista(musica.artista);\r\n            console.log(musica.artista);\r\n            this.setState({\r\n                nomeMusica: musica.nome,\r\n                artistas: artistasObjects,\r\n                artista: musica.artista,\r\n                albuns: albunsObjects,\r\n                album: musica.album\r\n            });\r\n        }\r\n    }\r\n\r\n    salvarMusica = (e) => {\r\n        e.preventDefault();\r\n        let musica = {\r\n            nome: this.state.nomeMusica,\r\n            artista: this.state.artista,\r\n            album: this.state.album\r\n        };\r\n        console.log(musica);\r\n        console.log(this.state.id);\r\n        MusicaService.createMusica(musica);\r\n    }\r\n\r\n    cancel() {\r\n        this.props.history.push('/musicas');\r\n    }\r\n\r\n    handleChangeMusica = (event) => {\r\n        this.setState({ nomeMusica: event.target.value });\r\n    }\r\n\r\n    handleChangeCmbArtista = (event) => {\r\n        let albumObject = '';\r\n        if (event.target.value != '') {\r\n            albumObject = MusicaService.retrieveAlbumsByArtista(JSON.parse(event.target.value));\r\n        }\r\n        this.state.albuns = albumObject;\r\n        this.setState({\r\n            artista: event.target.value,\r\n            albuns: albumObject,\r\n            album: albumObject[0],\r\n        });\r\n\r\n    }\r\n\r\n    handleChangeCmbAlbum = (event) => {\r\n        this.setState({\r\n            album: event.target.value\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <br />\r\n                            <h3 className=\"text-center\">Adicionar Música</h3>\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Música </label>\r\n                                        <input placeholder=\"Nome da música\" name=\"nomeMusica\" className=\"form-control\" value={this.state.nomeMusica} onChange={this.handleChangeMusica} />\r\n                                        <br />\r\n\r\n                                        <label>Artista </label>\r\n                                        <select className=\"form-control\" value={this.state.artista}\r\n                                            onChange={this.handleChangeCmbArtista}>\r\n                                            {this.state.artistas.map(\r\n                                                artista =>\r\n                                                    <option key={artista.id} value={JSON.stringify(artista)}>{artista.nome}</option>\r\n                                            )}\r\n                                        </select>\r\n                                        <br />\r\n\r\n                                        <label>Album </label>\r\n                                        <select className=\"form-control\" value={this.state.album}\r\n                                            onChange={this.handleChangeCmbAlbum}>\r\n                                            {this.state.albuns.map(\r\n                                                album =>\r\n                                                    <option key={album.id} value={JSON.stringify(album)}>{album.titulo}</option>\r\n                                            )}\r\n                                        </select>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <button className=\"btn btn-success\" onClick={this.salvarMusica}>Salvar</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{ marginLeft: \"10px\" }}>Cancelar</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MusicaCadComponent;","import React from 'react';\r\nimport './App.css';\r\nimport FooterComponent from './components/FooterComponent';\r\nimport HeaderComponent from './components/HeaderComponent';\r\nimport MusicaFilterComponent from './components/MusicaFilterComponent';\r\nimport MusicaService from './services/MusicaService';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport MusicaCadComponent from './components/MusicaCadComponent';\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <HeaderComponent />\r\n                <div className=\"container\">\r\n                    <Switch>\r\n                        <Route exact path={[\"/\", \"/musicas\"]} component={MusicaFilterComponent} />\r\n                        <Route path=\"/musicas/create\" component={MusicaCadComponent} />\r\n                        <Route path=\"/musicas/edit/:id\" component={MusicaCadComponent} />\r\n                    </Switch>\r\n                </div>\r\n                <FooterComponent />\r\n            </Router>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}